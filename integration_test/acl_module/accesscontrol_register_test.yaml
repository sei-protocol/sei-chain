- name: Test registering accesscontrol dependencies
  inputs:
    # Get admin
    - cmd: printf "12345678\n" | seid keys list --output json | jq ".[] | select (.name==\"admin\")" | jq -r .address
      env: ADMIN_ADDR
    # store code - get code ID
    - cmd: printf "12345678\n" | seid tx wasm store integration_test/contracts/counter_parallel.wasm --from admin -b block -y --gas 5000000 --fees 5sei --output json | jq -r ".logs[].events[].attributes[] | select(.key == \"code_id\").value"
      env: COUNTER_CODE_ID
    # instantiate contract - get contract address
    - cmd: "printf \"12345678\\n\" | seid tx wasm instantiate $COUNTER_CODE_ID \"{\\\"count\\\": 0}\" --label counter --admin $ADMIN_ADDR --from admin -b block -y --gas 5000000 --fees 5sei | grep -A 1 -m 1 \"key: _contract_address\" | sed -n \"s/.*value: //p\" | xargs"
      env: COUNTER_ADDRESS
    # set up parallel dependencies
    - cmd: python3 integration_test/contracts/contract_dep_generator.py build_counter_deps integration_test/contracts/parallelism_template.json integration_test/contracts/good_deps.json $COUNTER_CODE_ID $COUNTER_ADDRESS
      env: GOOD_DEPS_FILEPATH
    # set up bad parallel dependencies
    - cmd: python3 integration_test/contracts/contract_dep_generator.py build_counter_deps integration_test/contracts/bad_parallelism_template.json integration_test/contracts/bad_deps.json $COUNTER_CODE_ID $COUNTER_ADDRESS
      env: BAD_DEPS_FILEPATH
    # register bad deps with chain
    - cmd: printf "12345678\n" | seid tx accesscontrol register-wasm-dependency-mapping $BAD_DEPS_FILEPATH --from admin -b block -y --fees 2000usei
    # make a counter contract tx to reset the mapping
    - cmd: "printf \"12345678\\n\" | seid tx wasm execute $COUNTER_ADDRESS \"{\\\"increment\\\":{}}\" --from admin -b block -y --gas 1000000 --fees 1sei"
    # query dep mapping after reset to ensure it was reset
    - cmd: seid q accesscontrol wasm-dependency-mapping $COUNTER_ADDRESS --output json | jq -r ".wasm_dependency_mapping.reset_reason"
      env: RESET_REASON
    # register good deps with chain
    - cmd: printf "12345678\n" | seid tx accesscontrol register-wasm-dependency-mapping $GOOD_DEPS_FILEPATH --from admin -b block -y --fees 2000usei
    # make a counter contract tx to ensure it won't reset
    - cmd: "printf \"12345678\\n\" | seid tx wasm execute $COUNTER_ADDRESS \"{\\\"increment\\\":{}}\" --from admin -b block -y --gas 1000000 --fees 1sei"
    # query reset reason with good deps - should be empty
    - cmd: seid q accesscontrol wasm-dependency-mapping $COUNTER_ADDRESS --output json | jq -r ".wasm_dependency_mapping.reset_reason"
      env: RESET_REASON_2
  verifiers:
    # registered deps should be empty after resetting the bad one
    - type: eval
      expr: RESET_REASON == "incorrectly specified dependency access list"
    # second reset reason should be empty
    - type: eval
      expr: RESET_REASON_2 == ""

