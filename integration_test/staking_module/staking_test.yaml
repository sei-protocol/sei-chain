- name: Staking a validator
  inputs:
    - cmd: printf "12345678\n" | seid keys show node_admin --bech val --output json | jq -r ".address"
      env: ADMIN_VAL_ADDR

    # State before staking
    - cmd: seid q staking pool --output json | jq -r ".bonded_tokens"
      env: BEFORE_STAKING_POOL
    - cmd: seid q staking validator $ADMIN_VAL_ADDR --output json | jq -r ".tokens"
      env: BEFORE_STAKED_TOKENS

    # staking tx
    - cmd: printf "12345678\n" | seid tx staking delegate $ADMIN_VAL_ADDR --fees 2000usei --from node_admin -b block -y --output json | jq -r ".code"
      env: DELEGATE_RESPONSE_CODE

    # state after staking
    - cmd: seid q staking pool --output json | jq ".bonded_tokens"
      env: AFTER_STAKING_POOL
    - cmd: seid q staking validator $ADMIN_VAL_ADDR --output json | jq -r ".tokens"
      env: AFTER_STAKED_TOKENS

  verifiers:
    - type: eval
      expr: DELEGATE_RESPONSE_CODE == 0
    - type: eval
      expr: AFTER_STAKING_POOL > BEFORE_STAKING_POOL
    - type: eval
      expr: BEFORE_STAKED_TOKENS > AFTER_STAKED_TOKENS
