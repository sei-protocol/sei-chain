- name: Test cancel a placed order and query the cancelled order
  inputs:
    # Get contract address, this requires contract already deployed
    - cmd: tail -1 integration_test/contracts/mars-addr.txt
      env: CONTRACT_ADDR
    # Prepare parameter to first place the order
    - cmd: echo "LONG?1.01?5?SEI?ATOM?LIMIT?{\"leverage\":\"1\",\"position_effect\":\"Open\"}"
      env: PARAMS
    # Place an order and set ORDER_ID
    - cmd: printf "12345678\n" | seid tx dex place-orders $CONTRACT_ADDR $PARAMS --amount=1000000000usei -y --from=admin --chain-id=sei --fees=1000000usei --gas=5000000 --broadcast-mode=block --output json|jq -M -r ".logs[].events[].attributes[] | select(.key == \"order_id\").value"
      env: ORDER_ID
    # Prepare parameter to cancel the placed order
    - cmd: echo $ORDER_ID"?LONG?1.01?SEI?ATOM"
      env: PARAMS
    # Cancel the order
    - cmd: printf "12345678\n" | seid tx dex cancel-orders $CONTRACT_ADDR $PARAMS -y --from=admin --chain-id=sei --fees=1000000usei --gas=5000000 --broadcast-mode=block --output json
      env: RES
    - cmd: printf "12345678\n" | seid keys show admin --output json |jq -r .address
      env: ADMIN_ADDR
    # Query the order by id
    - cmd: seid q dex get-orders $CONTRACT_ADDR $ADMIN_ADDR --output json |jq ".[] | length"
      env: NUMORDER
  verifiers:
    - type: eval
      expr: NUMORDER == 5 # placed from the place_order test
