// Copyright 2021 Coinbase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by: OpenAPI Generator (https://openapi-generator.tech)

package types

// NetworkStatusResponse NetworkStatusResponse contains basic information about the node's view of a
// blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to
// CurrentBlockIdentifier.Index can be queried. If a Rosetta implementation prunes historical state,
// it should populate the optional `oldest_block_identifier` field with the oldest block available
// to query. If this is not populated, it is assumed that the `genesis_block_identifier` is the
// oldest queryable block. If a Rosetta implementation performs some pre-sync before it is possible
// to query blocks, sync_status should be populated so that clients can still monitor healthiness.
// Without this field, it may appear that the implementation is stuck syncing and needs to be
// terminated.
type NetworkStatusResponse struct {
	CurrentBlockIdentifier *BlockIdentifier `json:"current_block_identifier"`
	// The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in
	// milliseconds because some blockchains produce blocks more often than once a second.
	CurrentBlockTimestamp  int64            `json:"current_block_timestamp"`
	GenesisBlockIdentifier *BlockIdentifier `json:"genesis_block_identifier"`
	OldestBlockIdentifier  *BlockIdentifier `json:"oldest_block_identifier,omitempty"`
	SyncStatus             *SyncStatus      `json:"sync_status,omitempty"`
	Peers                  []*Peer          `json:"peers"`
}
