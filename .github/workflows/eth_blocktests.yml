name: SEI Balance Check

on:
  workflow_dispatch:
  push:
    branches:name: SEI ETH Block Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  sei-balance-check:
    runs-on: ubuntu-latest

    steps:
      - name: Run SEI Balance Query (Pacific-1)
        env:
          SEI_ADDRESS: ${{ secrets.SEI_ADDRESS }}
          REST_URL: "https://rest.sei-apis.com"
          MIN_BALANCE_USEI: "1000000"  # 1 SEI = 1,000,000 usei
        run: |
          echo "üîç Using SEI address: $SEI_ADDRESS"
          echo "üì° Fetching: $REST_URL/cosmos/bank/v1beta1/balances/$SEI_ADDRESS"

          # Fetch balances via REST
          RESPONSE=$(curl -s "$REST_URL/cosmos/bank/v1beta1/balances/$SEI_ADDRESS")

          echo "üì¶ Raw Response:"
          echo "$RESPONSE" | jq .

          # Extract 'usei' balance
          BALANCE=$(echo "$RESPONSE" | jq -r '.balances[] | select(.denom == "usei") | .amount')

          # Handle missing or invalid balance
          if [[ -z "$BALANCE" || "$BALANCE" == "null" ]]; then
            echo "‚ùå No 'usei' balance found for $SEI_ADDRESS"
            exit 1
          fi

          echo "üí∞ SEI Balance: $BALANCE usei"

          # Compare against threshold
          if [ "$BALANCE" -lt "$MIN_BALANCE_USEI" ]; then
            echo "‚ö†Ô∏è Balance below 1 SEI threshold"
            exit 1
          fi

          echo "‚úÖ Balance is OK"

      - main
name: SEI Mnemonic Balance Checker

on:
  workflow_dispatch:

jobs:
  check-balances:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq nodejs npm

      - name: Install CosmJS CLI
        run: |
          npm install -g @cosmjs/cli

      - name: Prepare result file
        run: |
          mkdir -p results
          echo "Mnemonic,SEI Address,usei Balance" > results/valid_sei_accounts.csv

      - name: Check balances for all mnemonics
        env:
          MNEMONIC_LIST: ${{ secrets.MNEMONIC_LIST }}
          REST_URL: "https://rest.sei-apis.com"
        run: |
          echo "$MNEMONIC_LIST" | while read -r MNEMONIC; do
            echo "üîë Checking mnemonic: $MNEMONIC"

            # Derive address using CosmJS
            ADDR=$(npx --yes @cosmjs/cli --prefix sei --hd-path "m/44'/118'/0'/0/0" <<< "mnemonic = '$MNEMONIC'; getAddress(mnemonic)")
            echo "üì¨ Address: $ADDR"

            if [[ -z "$ADDR" || "$ADDR" == "null" ]]; then
              echo "‚ùå Failed to derive address."
              continue
            fi

            # Query balance
            RESPONSE=$(curl -s "$REST_URL/cosmos/bank/v1beta1/balances/$ADDR")
            BAL=$(echo "$RESPONSE" | jq -r '.balances[] | select(.denom == "usei") | .amount')

            if [[ -z "$BAL" || "$BAL" == "null" || "$BAL" == "0" ]]; then
              echo "‚ö†Ô∏è No balance for $ADDR"
            else
              echo "‚úÖ $ADDR has $BAL usei"
              echo "\"$MNEMONIC\",\"$ADDR\",\"$BAL\"" >> results/valid_sei_accounts.csv
            fi

            echo "---------------------------"
          done

      - name: Upload valid results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: valid_sei_accounts
          path: results/valid_sei_accounts.csv

jobs:
  sei-balance-check:
    runs-on: ubuntu-latest

    steps:
      - name: Run SEI Balance Query (Pacific-1)
        env:
          SEI_ADDRESS: ${{ secrets.SEI_ADDRESS }}
          REST_URL: "https://rest.sei-apis.com"
          MIN_BALANCE_USEI: "1000000"  # 1 SEI = 1,000,000 usei
        run: |
          echo "üîç Using SEI address: $SEI_ADDRESS"
          echo "üì° Fetching: $REST_URL/cosmos/bank/v1beta1/balances/$SEI_ADDRESS"

          # Fetch balances via REST
          RESPONSE=$(curl -s "$REST_URL/cosmos/bank/v1beta1/balances/$SEI_ADDRESS")

          echo "üì¶ Raw Response:"
          echo "$RESPONSE" | jq .

          # Extract 'usei' balance
          BALANCE=$(echo "$RESPONSE" | jq -r '.balances[] | select(.denom == "usei") | .amount')

          # Handle missing or invalid balance
          if [[ -z "$BALANCE" || "$BALANCE" == "null" ]]; then
            echo "‚ùå No 'usei' balance found for $SEI_ADDRESS"
            exit 1
          fi

          echo "üí∞ SEI Balance: $BALANCE usei"

          # Compare against threshold
          if [ "$BALANCE" -lt "$MIN_BALANCE_USEI" ]; then
            echo "‚ö†Ô∏è Balance below 1 SEI threshold"
            exit 1
          fi

          echo "‚úÖ Balance is OK"
