name: "🔥 Deploy Kin Contract – AbandonedLion"

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write  # Needed for commenting back

jobs:
  deploy:
    if: contains(github.event.comment.body, '/abandonedlion deploy')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [sei, base, arbitrum]
    env:
      DRY_RUN: false

    steps:
      - name: 🦁 Checkout Repository
        uses: actions/checkout@v4

      - name: 🦁 Set Up Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: 🧪 Parse for Dry Run
        id: parse
        run: |
          if [[ "${{ github.event.comment.body }}" == *"--dry"* ]]; then
            echo "DRY_RUN=true" >> $GITHUB_ENV
          fi

      - name: 🔥 Forge Build
        run: forge build

      - name: 🚀 Deploy to ${{ matrix.network }}
        if: env.DRY_RUN == 'false'
        id: deploy
        run: |
          set -euo pipefail

          case "${{ matrix.network }}" in
            sei) RPC="${{ secrets.SEI_RPC_URL }}" ;;
            base) RPC="${{ secrets.BASE_RPC_URL }}" ;;
            arbitrum) RPC="${{ secrets.ARBITRUM_RPC_URL }}" ;;
            *) echo "❌ Unsupported network: ${{ matrix.network }}" && exit 1 ;;
          esac

          echo "🔐 Deploying to ${{ matrix.network }}..."

          TX_OUTPUT=$(forge create SeiWordZK \
            --rpc-url "$RPC" \
            --private-key "${{ secrets.KIN_DEPLOYER_KEY }}" \
            --constructor-args 0xYourVerifierAddress \
            --json)

          echo "$TX_OUTPUT" > deployment-${{ matrix.network }}.json

          DEPLOYED_ADDR=$(jq -r '.deployedTo' <<< "$TX_OUTPUT")
          TX_HASH=$(jq -r '.transactionHash' <<< "$TX_OUTPUT")

          echo "DEPLOYED_ADDR=$DEPLOYED_ADDR" >> $GITHUB_ENV
          echo "TX_HASH=$TX_HASH" >> $GITHUB_ENV

      - name: 💬 Comment Deployment
        if: env.DRY_RUN == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const net = '${{ matrix.network }}';
            const output = fs.readFileSync(`deployment-${net}.json`, 'utf8');
            const result = JSON.parse(output);

            const msg = [
              `**✅ AbandonedLion Deployed to \`${net}\`**`,
              '',
              `**Contract Address**: \`${result.deployedTo}\``,
              `**TX Hash**: \`${result.transactionHash}\``,
              '',
              '_Powered by Kin & AbandonedLion deploy script_'
            ].join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue?.number || context.payload.pull_request?.number,
              body: msg
            });

      - name: 🧪 Dry Run Confirmation
        if: env.DRY_RUN == 'true'
        run: echo "🧪 Dry run successful: forge build completed, no contract deployed."
