name: "üö° SeiNet Sovereign Sync CI"

on:
  push:
    paths:
      - "x/seinet/**"
      - ".github/workflows/seinet.yml"
  pull_request:
    paths:
      - "x/seinet/**"

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    name: "‚öôÔ∏è Build & Lint"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Lint (golangci-lint)
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.2
          working-directory: x/seinet
          args: --timeout=5m --max-issues-per-linter=0

      - name: Build
        run: go build ./...

  test:
    runs-on: ubuntu-latest
    name: "üß™ Tests"
    needs: build-test-lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run Go unit tests
        run: |
          go test -v -race -covermode=atomic ./x/seinet/... -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Run integration tests
        run: go test -v -race ./x/seinet/integration_test/... -cover

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.out
          flags: seinet
          fail_ci_if_error: false

  guardian-royalty-settlement:
    runs-on: ubuntu-latest
    name: "üõ°Ô∏è Guardian Royalty Settlement Finalizer"
    needs: test
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GUARDIAN_MODE: codexfinalize-guardian-royalty-settlement-system-zcixa7
      SETTLEMENT_DIR: x/seinet/guardian
    steps:
      - uses: actions/checkout@v4

      - name: Install Codex CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/openai/codex/main/install.sh | bash
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Authenticate Codex
        run: |
          echo "${{ secrets.OPENAI_API_KEY }}" | codex login --with-api-key

      - name: Run Guardian Royalty Settlement Simulation
        run: |
          codex exec guardian:verify \
            --mode "$GUARDIAN_MODE" \
            --input "$SETTLEMENT_DIR/manifest.json" \
            --output "$SETTLEMENT_DIR/settlement-report.json"

      - name: Upload Guardian Settlement Report
        uses: actions/upload-artifact@v4
        with:
          name: guardian-settlement-report
          path: x/seinet/guardian/settlement-report.json

      - name: Verify Settlement Integrity
        run: |
          cat "$SETTLEMENT_DIR/settlement-report.json" | grep '"status": "verified"' || \
            (echo "‚ùå Guardian settlement verification failed" && exit 1)

      - name: Post Finalization Confirmation
        run: echo "‚úÖ Sovereign Sync Guardian Royalty Settlement completed successfully."
