name: Codex Review

on:
  workflow_dispatch:

jobs:
  codex_review:
    runs-on: ubuntu-latest
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
      TS: ${{ github.run_id }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ✍️ Generate fallback Codex review
        run: |
          echo "## Executive summary" > review.md
          echo "No findings were automatically generated. Please review manually." >> review.md
          echo >> review.md
          echo "## Findings and fixes" >> review.md
          echo "- [ ] Placeholder finding: Nothing was detected, but code coverage or lineage could be added." >> review.md

      - name: ✅ Validate review.md
        run: |
          if [ ! -s review.md ]; then
            echo "❌ review.md missing or empty"
            exit 1
          fi

      - name: 🚀 Upload to Slack
        run: |
          set -euo pipefail
          BYTES=$( (stat -c%s review.md 2>/dev/null || stat -f%z review.md 2>/dev/null) )
          BYTES=${BYTES:-$(wc -c < review.md | tr -d '[:space:]')}
          ticket=$(curl -sS -X POST https://slack.com/api/files.getUploadURLExternal \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-type: application/x-www-form-urlencoded" \
            --data-urlencode "filename=codex_review.md" \
            --data "length=$BYTES" \
            --data "snippet_type=markdown")
          upload_url=$(echo "$ticket" | jq -r '.upload_url')
          file_id=$(echo "$ticket" | jq -r '.file_id')
          test "$upload_url" != "null" -a "$file_id" != "null" || {
            echo "getUploadURLExternal failed: $ticket" >&2
            exit 1
          }
          curl -sS -X POST "$upload_url" -F "filename=@review.md;type=text/markdown" > /dev/null
          payload=$(jq -n --arg fid "$file_id" --arg ch "$SLACK_CHANNEL_ID" --arg ts "$TS" \
            --arg title "Codex Security Review" --arg ic "Automated Codex review attached." \
            '{files:[{id:$fid, title:$title}], channel_id:$ch, thread_ts:$ts, initial_comment:$ic}')
          resp=$(curl -sS -X POST https://slack.com/api/files.completeUploadExternal \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-type: application/json; charset=utf-8" \
            --data "$payload")
          echo "$resp"
          test "$(echo "$resp" | jq -r '.ok')" = "true" || {
            echo "files.completeUploadExternal failed: $resp" >&2
            exit 1
          }
