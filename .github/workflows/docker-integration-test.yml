name: Docker Integration Test

on:
  push:
    branches:
      - main
      - seiv2
  pull_request:
    branches:
      - main
      - seiv2
      - evm

defaults:
  run:
    shell: bash

jobs:
  integration-tests:
    name: Integration Test (${{ matrix.test.name }})
    runs-on: ubuntu-large
    timeout-minutes: 30
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DAPP_TESTS_MNEMONIC: ${{ secrets.DAPP_TESTS_MNEMONIC }}
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: "Wasm Module"
            scripts:
              - docker exec sei-node-0 integration_test/contracts/deploy_timelocked_token_contract.sh
              - python3 integration_test/scripts/runner.py integration_test/wasm_module/timelocked_token_delegation_test.yaml
              - python3 integration_test/scripts/runner.py integration_test/wasm_module/timelocked_token_admin_test.yaml
              - python3 integration_test/scripts/runner.py integration_test/wasm_module/timelocked_token_withdraw_test.yaml
              - docker exec sei-node-0 integration_test/contracts/deploy_timelocked_token_contract.sh
              - python3 integration_test/scripts/runner.py integration_test/wasm_module/timelocked_token_emergency_withdraw_test.yaml
          # [... other tests same as before ...]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Pyyaml and jq
        run: |
          pip3 install pyyaml
          sudo apt-get install -y jq

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Start 4 node docker cluster
        run: make clean && INVARIANT_CHECK_INTERVAL=10 ${{ matrix.test.env }} make docker-cluster-start &

      - name: Wait for docker cluster to start
        run: |
          until [ $(cat build/generated/launch.complete | wc -l) = 4 ]; do
            echo "⏳ waiting for 4 nodes to launch..."
            sleep 10
          done

      - name: Start rpc node
        run: make run-rpc-node-skipbuild &

      - name: Verify Sei Chain is running
        run: python3 integration_test/scripts/runner.py integration_test/startup/startup_test.yaml

      - name: Run ${{ matrix.test.name }}
        run: |
          IFS=$'\n'
          for script in $(echo '${{ toJson(matrix.test.scripts) }}' | jq -r '.[]'); do
            bash -c "$script"
          done
          unset IFS

  integration-test-check:
    name: Integration Test Check
    runs-on: ubuntu-latest
    needs: integration-tests
    if: always()
    steps:
      - name: Get workflow conclusion
        uses: nick-fields/retry@v2
        with:
          max_attempts: 2
          retry_on: error
          timeout_seconds: 30
          command: |
            jobs=$(curl -s https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs)
            job_statuses=$(echo "$jobs" | jq -r '.jobs[] | .conclusion')
            for status in $job_statuses; do
              echo "Status: $status"
              if [[ "$status" == "failure" || "$status" == "cancelled" ]]; then
                echo "❌ Integration test matrix failed or was cancelled!"
                exit 1
              fi
            done
            echo "✅ All matrix jobs passed."
