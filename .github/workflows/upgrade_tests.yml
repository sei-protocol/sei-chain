# This workflow will verify that nodes handle upgrades as expected

name: Upgrade Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    shell: bash

jobs:
  upgrade-tests:
    name: "Upgrade Test: (${{ matrix.test.name }})"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    strategy:
      fail-fast: false
      matrix:
        test: [
          {
            name: "Minor Upgrade",
            script: "minor_upgrade_test.yml"
          },
          {
            name: "Major Upgrade",
            script: "major_upgrade_test.yml"
          }
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Dependencies
        run: |
          pip3 install pyyaml
          sudo apt-get install -y jq

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Initialize Cluster
        run: |
          ./integration_test/upgrade_module/scripts/launch_cluster.sh v1.0.0,v1.0.1,v1.0.2
          ./integration_test/upgrade_module/scripts/sync_scripts.sh

      - name: "Test: ${{ matrix.test.name }}"
        run: python3 integration_test/scripts/runner.py integration_test/upgrade_module/${{ matrix.test.script }}

  upgrade-test-check:
    name: Upgrade Test Check
    runs-on: ubuntu-latest
    needs: upgrade-tests
    if: always()
    steps:
      - name: Get workflow conclusion
        id: workflow_conclusion
        uses: nick-fields/retry@v2
        with:
          max_attempts: 2
          retry_on: error
          timeout_seconds: 30
          command: |
            jobs=$(curl https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs)
            job_statuses=$(echo "$jobs" | jq -r '.jobs[] | .conclusion')
            
            for status in $job_statuses
            do
              echo "Status: $status"
              if [[ "$status" == "failure" ]]; then
                echo "Some or all tests have failed!"
                exit 1
              fi
            done
            
            echo "All tests have passed!"
