name: Test

on:
  pull_request:
  push:
    paths:
      - "**.go"
    branches:
      - main
      - seiv2
      - evm
      - release/**

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        part: ["00","01","02","03","04","05","06","07","08","09",
                "10","11","12","13","14","15","16","17","18","19"]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history for get-diff-action

      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            "!test/"
            go.mod
            go.sum
            Makefile

      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/golangci-lint
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Run Parallel Go Tests
        run: |
          NUM_SPLIT=20
          make test-group-${{ matrix.part }} NUM_SPLIT=$NUM_SPLIT

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ github.sha }}-${{ matrix.part }}-coverage"
          path: ./${{ matrix.part }}.profile.out

  upload-coverage-report:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Download all test artifacts
        uses: actions/download-artifact@v4

      - name: Add GOPATH/bin to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install gocovmerge
        run: go install github.com/wadey/gocovmerge@latest

      - name: Merge coverage reports
        run: gocovmerge $(find . -type f -name '*profile.out') > coverage.txt

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: üí° Add local dev coverage guide
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const msg = [
              '<details><summary>How to run coverage locally</summary>',
              '',
              '```bash',
              'go test ./... -race -covermode=atomic -coverprofile=coverage.out',
              'go tool cover -html=coverage.out',
              '```',
              '</details>'
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: msg
            });

  unit-test-check:
    name: Unit Test Outcome Verification
    runs-on: ubuntu-latest
    needs: tests
    if: always()
    steps:
      - name: Check all matrix test statuses
        run: |
          jobs=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs)
          job_statuses=$(echo "$jobs" | jq -r '.jobs[] | select(.name | startswith("tests")) | .conclusion')

          for status in $job_statuses; do
            echo "Status: $status"
            if [[ "$status" == "failure" ]]; then
              echo "‚ùå Some matrix test jobs failed."
              exit 1
            fi
          done
          echo "‚úÖ All matrix test jobs passed."
