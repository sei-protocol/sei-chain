name: Test

on:
  pull_request:
  push:
    paths:
      - "**.go"
    branches:
      - main
      - seiv2
      - evm
      - release/**

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        part: ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            "!test/"
            go.mod
            go.sum
            Makefile

      - name: Restore Go build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/golangci-lint
            ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Run Go Tests for ${{ matrix.part }}
        run: |
          NUM_SPLIT=20
          make test-group-${{ matrix.part }} NUM_SPLIT=$NUM_SPLIT

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ github.sha }}-${{ matrix.part }}-coverage"
          path: ./${{ matrix.part }}.profile.out

  upload-coverage-report:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4

      - name: Set GOPATH and GOBIN
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "GOBIN=$(go env GOPATH)/bin" >> $GITHUB_ENV

      - name: Install gocovmerge
        run: |
          go install github.com/wadey/gocovmerge@latest

      - name: Merge all profile.out files
        run: |
          gocovmerge $(find . -type f -name '*profile.out') > coverage.txt

      - name: Debug coverage line count
        run: wc -l coverage.txt || true

      - name: List found profile files
        run: ls **/*profile.out || true

      - name: Upload merged coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  unit-test-check:
    name: Unit Test Check
    runs-on: ubuntu-latest
    needs: tests
    if: always()
    steps:
      - name: Check all test job conclusions
        run: |
          echo "üîç Checking job statuses..."
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
            | jq -r '.jobs[] | .conclusion' > conclusions.txt

          if grep -q "failure" conclusions.txt; then
            echo "‚ùå One or more test jobs failed."
            cat conclusions.txt
            exit 1
          fi

          echo "‚úÖ All test jobs passed."
