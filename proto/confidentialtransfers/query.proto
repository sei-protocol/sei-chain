syntax = "proto3";
package seiprotocol.seichain.confidentialtransfers;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "confidentialtransfers/confidential.proto";

option go_package = "github.com/sei-protocol/sei-chain/x/confidentialtransfers/types";

// Query defines the gRPC querier service.
service Query {
  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/seichain/confidentialtransfers/account/{address}/{denom}"
    };
  }

  rpc GetAllAccounts (GetAllAccountsRequest) returns (GetAllAccountsResponse) {
    option (google.api.http) = {
      get: "/seichain/confidentialtransfers/account/{address}"
    };
  }
}

message GetAccountRequest {
  string address = 1;
  string denom = 2;
}

message GetAccountResponse {
  CtAccount account = 1;
}

message GetAllAccountsRequest {
  string address = 1;
}

message GetAllAccountsResponse {
  repeated CtAccount accounts = 1;
}