syntax = "proto3";
package seiprotocol.seichain.eth;

import "gogoproto/gogo.proto";

option go_package = "github.com/sei-protocol/sei-chain/x/evm/types/ethtx";

message AccessTuple {
    option (gogoproto.goproto_getters) = false;

    string address = 1;
    repeated string storage_keys = 2 [
        (gogoproto.jsontag) = "storageKeys"
    ];
  }

message LegacyTx {
    option (gogoproto.goproto_getters) = false;

    uint64 nonce = 1;
    string gas_price = 2 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
    ];
    uint64 gas = 3 [
        (gogoproto.customname) = "GasLimit"
    ];
    string to = 4;
    string value = 5 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.customname) = "Amount"
    ];
    bytes data = 6;
    bytes v = 7;
    bytes r = 8;
    bytes s = 9;
}

message AccessListTx {
    option (gogoproto.goproto_getters) = false;

string chain_id = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "ChainID",
    (gogoproto.jsontag) = "chainID"
];
uint64 nonce = 2;
string gas_price = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
uint64 gas = 4 [
    (gogoproto.customname) = "GasLimit"
];
string to = 5;
string value = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "Amount"
];
bytes data = 7;
repeated AccessTuple accesses = 8 [
    (gogoproto.castrepeated) = "AccessList",
    (gogoproto.jsontag) = "accessList",
    (gogoproto.nullable) = false
];
bytes v = 9;
bytes r = 10;
bytes s = 11;
}

message DynamicFeeTx {
    option (gogoproto.goproto_getters) = false;

string chain_id = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "ChainID",
    (gogoproto.jsontag) = "chainID"
];
uint64 nonce = 2;
string gas_tip_cap = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
string gas_fee_cap = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
uint64 gas = 5 [
    (gogoproto.customname) = "GasLimit"
];
string to = 6;
string value = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "Amount"
];
bytes data = 8;
repeated AccessTuple accesses = 9 [
    (gogoproto.castrepeated) = "AccessList",
    (gogoproto.jsontag) = "accessList",
    (gogoproto.nullable) = false
];
bytes v = 10;
bytes r = 11;
bytes s = 12;
}

message BlobTx {
    option (gogoproto.goproto_getters) = false;

string chain_id = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "ChainID",
    (gogoproto.jsontag) = "chainID"
];
uint64 nonce = 2;
string gas_tip_cap = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
string gas_fee_cap = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
uint64 gas = 5 [
    (gogoproto.customname) = "GasLimit"
];
string to = 6;
string value = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.customname) = "Amount"
];
bytes data = 8;
repeated AccessTuple accesses = 9 [
    (gogoproto.castrepeated) = "AccessList",
    (gogoproto.jsontag) = "accessList",
    (gogoproto.nullable) = false
];
string blob_fee_cap = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
];
repeated bytes blob_hashes = 11;
bytes v = 12;
bytes r = 13;
bytes s = 14;
}

message ExtensionOptionsEthereumTx {
option (gogoproto.goproto_getters) = false;
}