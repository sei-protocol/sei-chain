syntax = "proto3";
package seiprotocol.seichain.mint;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mint/v1beta1/mint.proto";

option go_package = "github.com/sei-protocol/sei-chain/x/mint/types";

// Query provides defines the gRPC querier service.
service Query {
  // Params returns the total set of minting parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/seichain/mint/v1beta1/params";
  }

  // EpochProvisions current minting epoch provisions value.
  rpc Minter(QueryMinterRequest)
      returns (QueryMinterResponse) {
    option (google.api.http).get = "/seichain/mint/v1beta1/minter";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryMinterRequest is the request type for the
// Query/Minter RPC method.
message QueryMinterRequest {}

// QueryMinterResponse is the response type for the
// Query/Minter RPC method.
message QueryMinterResponse {
  string last_mint_amount = 1 [
    (gogoproto.moretags) = "yaml:\"last_mint_amount\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
    ];
  string last_mint_date = 2 [
    (gogoproto.moretags) = "yaml:\"last_mint_date\""
  ];
  int64 last_mint_height = 3 [
    (gogoproto.moretags) = "yaml:\"last_mint_height\""
  ];
  string denom = 4 [
    (gogoproto.moretags) = "yaml:\"denom\""
  ];
}
