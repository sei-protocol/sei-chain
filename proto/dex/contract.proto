syntax = "proto3";
package seiprotocol.seichain.dex;

option go_package = "github.com/sei-protocol/sei-chain/x/dex/types";

message ContractInfo {
  uint64 codeId = 1;
  string contractAddr = 2;
  bool needHook = 3;
  bool needOrderMatching = 4;
  repeated ContractDependencyInfo dependencies = 5;
  int64 numIncomingDependencies = 6;
}

message ContractInfoV2 {
  uint64 codeId = 1;
  string contractAddr = 2;
  bool needHook = 3;
  bool needOrderMatching = 4;
  repeated ContractDependencyInfo dependencies = 5;
  int64 numIncomingDependencies = 6;
  string creator = 7;
  uint64 rentBalance = 8;
  bool suspended = 9;
  string suspensionReason = 10;
}

// suppose A is first registered and depends on X, then B is added and depends on X,
// and then C is added and depends on X, then A is the elder sibling to B and B is 
// the younger sibling to A, and B is the elder sibling to C and C is the younger to B
message ContractDependencyInfo {
  string dependency = 1;
  string immediateElderSibling = 2;
  string immediateYoungerSibling = 3;
}

message LegacyContractInfo {
  uint64 codeId = 1;
  string contractAddr = 2;
  bool needHook = 3;
  bool needOrderMatching = 4;
  repeated string dependentContractAddrs = 5;
}