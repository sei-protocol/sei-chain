syntax = "proto3";
package seiprotocol.seichain.evm;

import "google/api/annotations.proto";
import "evm/enums.proto";

option go_package = "github.com/sei-protocol/sei-chain/x/evm/types";

// Query defines the gRPC querier service.
service Query {
    rpc SeiAddressByEVMAddress(QuerySeiAddressByEVMAddressRequest) returns (QuerySeiAddressByEVMAddressResponse) {
        option (google.api.http).get = "/sei-protocol/seichain/evm/sei_address";
    }

    rpc EVMAddressBySeiAddress(QueryEVMAddressBySeiAddressRequest) returns (QueryEVMAddressBySeiAddressResponse) {
        option (google.api.http).get = "/sei-protocol/seichain/evm/evm_address";
    }

    rpc StaticCall(QueryStaticCallRequest) returns (QueryStaticCallResponse) {
        option (google.api.http).get = "/sei-protocol/seichain/evm/static_call";
    }

    rpc Pointer(QueryPointerRequest) returns (QueryPointerResponse) {
        option (google.api.http).get = "/sei-protocol/seichain/evm/pointer";
    }

    rpc PointerVersion(QueryPointerVersionRequest) returns (QueryPointerVersionResponse) {
        option (google.api.http).get = "/sei-protocol/seichain/evm/pointer_version";
    }
}

message QuerySeiAddressByEVMAddressRequest {
    string evm_address = 1;
}

message QuerySeiAddressByEVMAddressResponse {
    string sei_address = 1;
    bool associated = 2;
}

message QueryEVMAddressBySeiAddressRequest {
    string sei_address = 1;
}

message QueryEVMAddressBySeiAddressResponse {
    string evm_address = 1;
    bool associated = 2;
}

message QueryStaticCallRequest {
    bytes data = 1;
    string to = 2;
}

message QueryStaticCallResponse {
    bytes data = 1;
}

message QueryPointerRequest {
    PointerType pointer_type = 1;
    string pointee = 2;
}

message QueryPointerResponse {
    string pointer = 1;
    uint32 version = 2;
    bool exists = 3;
}

message QueryPointerVersionRequest {
    PointerType pointer_type = 1;
}

message QueryPointerVersionResponse {
    uint32 version = 1;
    uint64 cw_code_id = 2;
}
