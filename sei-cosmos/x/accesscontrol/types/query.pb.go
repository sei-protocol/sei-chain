// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/accesscontrol_x/query.proto

package types

import (
	context "context"
	fmt "fmt"
	accesscontrol "github.com/cosmos/cosmos-sdk/types/accesscontrol"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

type QueryParamsResponse struct {
	// params defines the parameters of the module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type ResourceDependencyMappingFromMessageKeyRequest struct {
	MessageKey string `protobuf:"bytes,1,opt,name=message_key,json=messageKey,proto3" json:"message_key,omitempty" yaml:"message_key"`
}

func (m *ResourceDependencyMappingFromMessageKeyRequest) Reset() {
	*m = ResourceDependencyMappingFromMessageKeyRequest{}
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ResourceDependencyMappingFromMessageKeyRequest) ProtoMessage() {}
func (*ResourceDependencyMappingFromMessageKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{2}
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceDependencyMappingFromMessageKeyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceDependencyMappingFromMessageKeyRequest.Merge(m, src)
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) XXX_Size() int {
	return m.Size()
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceDependencyMappingFromMessageKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceDependencyMappingFromMessageKeyRequest proto.InternalMessageInfo

func (m *ResourceDependencyMappingFromMessageKeyRequest) GetMessageKey() string {
	if m != nil {
		return m.MessageKey
	}
	return ""
}

type ResourceDependencyMappingFromMessageKeyResponse struct {
	MessageDependencyMapping accesscontrol.MessageDependencyMapping `protobuf:"bytes,1,opt,name=message_dependency_mapping,json=messageDependencyMapping,proto3" json:"message_dependency_mapping" yaml:"message_dependency_mapping"`
}

func (m *ResourceDependencyMappingFromMessageKeyResponse) Reset() {
	*m = ResourceDependencyMappingFromMessageKeyResponse{}
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ResourceDependencyMappingFromMessageKeyResponse) ProtoMessage() {}
func (*ResourceDependencyMappingFromMessageKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{3}
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceDependencyMappingFromMessageKeyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceDependencyMappingFromMessageKeyResponse.Merge(m, src)
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) XXX_Size() int {
	return m.Size()
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceDependencyMappingFromMessageKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceDependencyMappingFromMessageKeyResponse proto.InternalMessageInfo

func (m *ResourceDependencyMappingFromMessageKeyResponse) GetMessageDependencyMapping() accesscontrol.MessageDependencyMapping {
	if m != nil {
		return m.MessageDependencyMapping
	}
	return accesscontrol.MessageDependencyMapping{}
}

type WasmFunctionDependencyMappingRequest struct {
	CodeId       uint64 `protobuf:"varint,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty" yaml:"code_id"`
	WasmFunction string `protobuf:"bytes,2,opt,name=wasm_function,json=wasmFunction,proto3" json:"wasm_function,omitempty" yaml:"wasm_function"`
}

func (m *WasmFunctionDependencyMappingRequest) Reset()         { *m = WasmFunctionDependencyMappingRequest{} }
func (m *WasmFunctionDependencyMappingRequest) String() string { return proto.CompactTextString(m) }
func (*WasmFunctionDependencyMappingRequest) ProtoMessage()    {}
func (*WasmFunctionDependencyMappingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{4}
}
func (m *WasmFunctionDependencyMappingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WasmFunctionDependencyMappingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WasmFunctionDependencyMappingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WasmFunctionDependencyMappingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WasmFunctionDependencyMappingRequest.Merge(m, src)
}
func (m *WasmFunctionDependencyMappingRequest) XXX_Size() int {
	return m.Size()
}
func (m *WasmFunctionDependencyMappingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WasmFunctionDependencyMappingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WasmFunctionDependencyMappingRequest proto.InternalMessageInfo

func (m *WasmFunctionDependencyMappingRequest) GetCodeId() uint64 {
	if m != nil {
		return m.CodeId
	}
	return 0
}

func (m *WasmFunctionDependencyMappingRequest) GetWasmFunction() string {
	if m != nil {
		return m.WasmFunction
	}
	return ""
}

type WasmFunctionDependencyMappingResponse struct {
	WasmFunctionDependencyMapping accesscontrol.WasmFunctionDependencyMapping `protobuf:"bytes,1,opt,name=wasm_function_dependency_mapping,json=wasmFunctionDependencyMapping,proto3" json:"wasm_function_dependency_mapping" yaml:"wasm_function_dependency_mapping"`
}

func (m *WasmFunctionDependencyMappingResponse) Reset()         { *m = WasmFunctionDependencyMappingResponse{} }
func (m *WasmFunctionDependencyMappingResponse) String() string { return proto.CompactTextString(m) }
func (*WasmFunctionDependencyMappingResponse) ProtoMessage()    {}
func (*WasmFunctionDependencyMappingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{5}
}
func (m *WasmFunctionDependencyMappingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WasmFunctionDependencyMappingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WasmFunctionDependencyMappingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WasmFunctionDependencyMappingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WasmFunctionDependencyMappingResponse.Merge(m, src)
}
func (m *WasmFunctionDependencyMappingResponse) XXX_Size() int {
	return m.Size()
}
func (m *WasmFunctionDependencyMappingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WasmFunctionDependencyMappingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WasmFunctionDependencyMappingResponse proto.InternalMessageInfo

func (m *WasmFunctionDependencyMappingResponse) GetWasmFunctionDependencyMapping() accesscontrol.WasmFunctionDependencyMapping {
	if m != nil {
		return m.WasmFunctionDependencyMapping
	}
	return accesscontrol.WasmFunctionDependencyMapping{}
}

type ListResourceDependencyMappingRequest struct {
}

func (m *ListResourceDependencyMappingRequest) Reset()         { *m = ListResourceDependencyMappingRequest{} }
func (m *ListResourceDependencyMappingRequest) String() string { return proto.CompactTextString(m) }
func (*ListResourceDependencyMappingRequest) ProtoMessage()    {}
func (*ListResourceDependencyMappingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{6}
}
func (m *ListResourceDependencyMappingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceDependencyMappingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceDependencyMappingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceDependencyMappingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceDependencyMappingRequest.Merge(m, src)
}
func (m *ListResourceDependencyMappingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceDependencyMappingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceDependencyMappingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceDependencyMappingRequest proto.InternalMessageInfo

type ListResourceDependencyMappingResponse struct {
	MessageDependencyMappingList []accesscontrol.MessageDependencyMapping `protobuf:"bytes,1,rep,name=message_dependency_mapping_list,json=messageDependencyMappingList,proto3" json:"message_dependency_mapping_list" yaml:"message_dependency_mapping_list"`
}

func (m *ListResourceDependencyMappingResponse) Reset()         { *m = ListResourceDependencyMappingResponse{} }
func (m *ListResourceDependencyMappingResponse) String() string { return proto.CompactTextString(m) }
func (*ListResourceDependencyMappingResponse) ProtoMessage()    {}
func (*ListResourceDependencyMappingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{7}
}
func (m *ListResourceDependencyMappingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourceDependencyMappingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourceDependencyMappingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourceDependencyMappingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourceDependencyMappingResponse.Merge(m, src)
}
func (m *ListResourceDependencyMappingResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListResourceDependencyMappingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourceDependencyMappingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourceDependencyMappingResponse proto.InternalMessageInfo

func (m *ListResourceDependencyMappingResponse) GetMessageDependencyMappingList() []accesscontrol.MessageDependencyMapping {
	if m != nil {
		return m.MessageDependencyMappingList
	}
	return nil
}

type ListWasmFunctionDependencyMappingRequest struct {
}

func (m *ListWasmFunctionDependencyMappingRequest) Reset() {
	*m = ListWasmFunctionDependencyMappingRequest{}
}
func (m *ListWasmFunctionDependencyMappingRequest) String() string { return proto.CompactTextString(m) }
func (*ListWasmFunctionDependencyMappingRequest) ProtoMessage()    {}
func (*ListWasmFunctionDependencyMappingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{8}
}
func (m *ListWasmFunctionDependencyMappingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWasmFunctionDependencyMappingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWasmFunctionDependencyMappingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWasmFunctionDependencyMappingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWasmFunctionDependencyMappingRequest.Merge(m, src)
}
func (m *ListWasmFunctionDependencyMappingRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListWasmFunctionDependencyMappingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWasmFunctionDependencyMappingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWasmFunctionDependencyMappingRequest proto.InternalMessageInfo

type ListWasmFunctionDependencyMappingResponse struct {
	WasmFunctionDependencyMappingList []accesscontrol.WasmFunctionDependencyMapping `protobuf:"bytes,1,rep,name=wasm_function_dependency_mapping_list,json=wasmFunctionDependencyMappingList,proto3" json:"wasm_function_dependency_mapping_list" yaml:"wasm_function_dependency_mapping_list"`
}

func (m *ListWasmFunctionDependencyMappingResponse) Reset() {
	*m = ListWasmFunctionDependencyMappingResponse{}
}
func (m *ListWasmFunctionDependencyMappingResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListWasmFunctionDependencyMappingResponse) ProtoMessage() {}
func (*ListWasmFunctionDependencyMappingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d83f2274e13e6a16, []int{9}
}
func (m *ListWasmFunctionDependencyMappingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWasmFunctionDependencyMappingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWasmFunctionDependencyMappingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWasmFunctionDependencyMappingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWasmFunctionDependencyMappingResponse.Merge(m, src)
}
func (m *ListWasmFunctionDependencyMappingResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListWasmFunctionDependencyMappingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWasmFunctionDependencyMappingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWasmFunctionDependencyMappingResponse proto.InternalMessageInfo

func (m *ListWasmFunctionDependencyMappingResponse) GetWasmFunctionDependencyMappingList() []accesscontrol.WasmFunctionDependencyMapping {
	if m != nil {
		return m.WasmFunctionDependencyMappingList
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "cosmos.accesscontrol_x.v1beta1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "cosmos.accesscontrol_x.v1beta1.QueryParamsResponse")
	proto.RegisterType((*ResourceDependencyMappingFromMessageKeyRequest)(nil), "cosmos.accesscontrol_x.v1beta1.ResourceDependencyMappingFromMessageKeyRequest")
	proto.RegisterType((*ResourceDependencyMappingFromMessageKeyResponse)(nil), "cosmos.accesscontrol_x.v1beta1.ResourceDependencyMappingFromMessageKeyResponse")
	proto.RegisterType((*WasmFunctionDependencyMappingRequest)(nil), "cosmos.accesscontrol_x.v1beta1.WasmFunctionDependencyMappingRequest")
	proto.RegisterType((*WasmFunctionDependencyMappingResponse)(nil), "cosmos.accesscontrol_x.v1beta1.WasmFunctionDependencyMappingResponse")
	proto.RegisterType((*ListResourceDependencyMappingRequest)(nil), "cosmos.accesscontrol_x.v1beta1.ListResourceDependencyMappingRequest")
	proto.RegisterType((*ListResourceDependencyMappingResponse)(nil), "cosmos.accesscontrol_x.v1beta1.ListResourceDependencyMappingResponse")
	proto.RegisterType((*ListWasmFunctionDependencyMappingRequest)(nil), "cosmos.accesscontrol_x.v1beta1.ListWasmFunctionDependencyMappingRequest")
	proto.RegisterType((*ListWasmFunctionDependencyMappingResponse)(nil), "cosmos.accesscontrol_x.v1beta1.ListWasmFunctionDependencyMappingResponse")
}

func init() {
	proto.RegisterFile("cosmos/accesscontrol_x/query.proto", fileDescriptor_d83f2274e13e6a16)
}

var fileDescriptor_d83f2274e13e6a16 = []byte{
	// 808 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x4f, 0x13, 0x41,
	0x14, 0xee, 0x54, 0xac, 0x61, 0x50, 0x0f, 0x23, 0x31, 0x4d, 0x03, 0x5b, 0x98, 0xf0, 0x5b, 0xdd,
	0x0d, 0xc5, 0x68, 0xa2, 0xf1, 0x60, 0x45, 0x02, 0x11, 0x50, 0xf7, 0x62, 0x22, 0x31, 0x9b, 0xed,
	0x76, 0x58, 0x37, 0x74, 0x77, 0x96, 0x9d, 0xad, 0xd0, 0x10, 0x2e, 0x9e, 0x3c, 0xfa, 0xe3, 0x0f,
	0x30, 0xf1, 0x6e, 0x3c, 0xf9, 0x17, 0x78, 0xe1, 0x48, 0xc2, 0x41, 0x4f, 0xd5, 0x80, 0xff, 0x80,
	0xbd, 0x70, 0x35, 0xbb, 0x3b, 0x90, 0x96, 0xb6, 0x3b, 0x4b, 0xe0, 0xd4, 0xdd, 0x9d, 0xf7, 0xde,
	0xf7, 0xbe, 0x6f, 0xbe, 0x79, 0x53, 0x88, 0x0d, 0xca, 0x6c, 0xca, 0x14, 0xdd, 0x30, 0x08, 0x63,
	0x06, 0x75, 0x7c, 0x8f, 0x56, 0xb4, 0x4d, 0x65, 0xbd, 0x4a, 0xbc, 0x9a, 0xec, 0x7a, 0xd4, 0xa7,
	0x48, 0x8a, 0x62, 0xe4, 0x13, 0x31, 0xf2, 0x9b, 0xe9, 0x12, 0xf1, 0xf5, 0xe9, 0x5c, 0xbf, 0x49,
	0x4d, 0x1a, 0x86, 0x2a, 0xc1, 0x53, 0x94, 0x95, 0x1b, 0x30, 0x29, 0x35, 0x2b, 0x44, 0xd1, 0x5d,
	0x4b, 0xd1, 0x1d, 0x87, 0xfa, 0xba, 0x6f, 0x51, 0x87, 0xf1, 0xd5, 0x29, 0x8e, 0x5b, 0xd2, 0x19,
	0x89, 0xc0, 0x14, 0x5e, 0x4e, 0x71, 0x75, 0xd3, 0x72, 0xc2, 0x60, 0x1e, 0x3b, 0xd1, 0xa9, 0xc7,
	0xd6, 0x37, 0x1e, 0x39, 0xd2, 0x85, 0x8d, 0x49, 0x1c, 0xc2, 0x2c, 0x8e, 0x8d, 0xfb, 0x21, 0x7a,
	0x1e, 0x20, 0x3e, 0xd3, 0x3d, 0xdd, 0x66, 0x2a, 0x59, 0xaf, 0x12, 0xe6, 0xe3, 0x15, 0x78, 0xad,
	0xe5, 0x2b, 0x73, 0xa9, 0xc3, 0x08, 0x9a, 0x85, 0x19, 0x37, 0xfc, 0x92, 0x05, 0x43, 0x60, 0xa2,
	0xaf, 0x30, 0x26, 0xc7, 0xab, 0x21, 0x47, 0xf9, 0xc5, 0x9e, 0x9d, 0x7a, 0x3e, 0xa5, 0xf2, 0x5c,
	0x6c, 0x41, 0x59, 0x25, 0x8c, 0x56, 0x3d, 0x83, 0xcc, 0x12, 0x97, 0x38, 0x65, 0xe2, 0x18, 0xb5,
	0x25, 0xdd, 0x75, 0x2d, 0xc7, 0x9c, 0xf3, 0xa8, 0xbd, 0x44, 0x18, 0xd3, 0x4d, 0xf2, 0x84, 0xd4,
	0x78, 0x3b, 0xe8, 0x2e, 0xec, 0xb3, 0xa3, 0x8f, 0xda, 0x1a, 0xa9, 0x85, 0xe0, 0xbd, 0xc5, 0xeb,
	0x8d, 0x7a, 0x1e, 0xd5, 0x74, 0xbb, 0x72, 0x0f, 0x37, 0x2d, 0x62, 0x15, 0xda, 0xc7, 0xf9, 0x78,
	0x0f, 0x40, 0x25, 0x31, 0x16, 0x27, 0xf9, 0x19, 0xc0, 0xdc, 0x51, 0xc1, 0xf2, 0x71, 0x8e, 0x66,
	0x47, 0x49, 0x9c, 0xf9, 0x9d, 0x8e, 0xcc, 0x8f, 0x79, 0xf3, 0xb2, 0x6d, 0x90, 0xc5, 0xc9, 0x40,
	0x89, 0x46, 0x3d, 0x3f, 0xdc, 0xda, 0x78, 0x3b, 0x0e, 0x56, 0xb3, 0x76, 0x97, 0x22, 0xf8, 0x23,
	0x80, 0x23, 0x2f, 0x74, 0x66, 0xcf, 0x55, 0x1d, 0x23, 0xb0, 0x46, 0x5b, 0xc4, 0x91, 0x6e, 0x37,
	0xe0, 0x25, 0x83, 0x96, 0x89, 0x66, 0x95, 0xc3, 0xb6, 0x7b, 0x8a, 0xa8, 0x51, 0xcf, 0x5f, 0x8d,
	0xa0, 0xf9, 0x02, 0x56, 0x33, 0xc1, 0xd3, 0x42, 0x19, 0x3d, 0x80, 0x57, 0x36, 0x74, 0x66, 0x6b,
	0xab, 0xbc, 0x6a, 0x36, 0x1d, 0xca, 0x9c, 0x6d, 0xd4, 0xf3, 0xfd, 0x51, 0x4a, 0xcb, 0x32, 0x56,
	0x2f, 0x6f, 0x34, 0xf5, 0x80, 0x7f, 0x03, 0x38, 0x2a, 0x68, 0x8a, 0x0b, 0xfc, 0x1d, 0xc0, 0xa1,
	0x96, 0x52, 0xdd, 0x65, 0xbe, 0x1f, 0x2f, 0x73, 0x2c, 0x5e, 0x51, 0xe1, 0x5a, 0x8f, 0x77, 0xe8,
	0xbe, 0xa3, 0xe2, 0x83, 0x1b, 0x71, 0xf5, 0xf0, 0x18, 0x1c, 0x59, 0xb4, 0x98, 0xdf, 0xd5, 0x4f,
	0x47, 0x87, 0xe7, 0x27, 0x80, 0xa3, 0x82, 0x40, 0xae, 0xc4, 0x57, 0x00, 0xf3, 0xdd, 0x2d, 0xa0,
	0x55, 0x2c, 0xe6, 0x67, 0xc1, 0xd0, 0x85, 0x33, 0xf8, 0x4d, 0xe6, 0x1a, 0x8c, 0x89, 0xfc, 0x16,
	0x82, 0x61, 0x75, 0xa0, 0x9b, 0xe9, 0x02, 0x42, 0x78, 0x0a, 0x4e, 0x04, 0xbf, 0x49, 0xbc, 0x87,
	0xff, 0x01, 0x38, 0x99, 0x20, 0x98, 0x2b, 0xf1, 0x03, 0xc0, 0x51, 0xd1, 0x06, 0x35, 0xeb, 0x71,
	0x26, 0x63, 0xdc, 0xe6, 0xa2, 0xdc, 0x4c, 0x66, 0x0c, 0x2e, 0xcd, 0x70, 0xac, 0x3b, 0x02, 0xaa,
	0x85, 0xc3, 0x5e, 0x78, 0x31, 0x9c, 0x9b, 0xe8, 0x0b, 0x80, 0x99, 0x68, 0xf8, 0xa1, 0x82, 0x68,
	0x48, 0xb6, 0xcf, 0xdf, 0xdc, 0xcc, 0xa9, 0x72, 0x22, 0x0d, 0xb1, 0xf2, 0x76, 0xef, 0xef, 0xa7,
	0xf4, 0x24, 0x1a, 0x57, 0xf8, 0xe4, 0x8f, 0x7e, 0x6e, 0xb1, 0xf2, 0xda, 0x89, 0xeb, 0x22, 0x1a,
	0xc4, 0xe8, 0x5b, 0x1a, 0x8e, 0x27, 0x9c, 0x8e, 0x68, 0x59, 0xd4, 0xd1, 0xe9, 0x46, 0x7a, 0xee,
	0xe9, 0xb9, 0xd5, 0xe3, 0xec, 0x8d, 0x90, 0xfd, 0x2b, 0xb4, 0x22, 0x64, 0xef, 0xf1, 0xca, 0x9d,
	0xb6, 0x7a, 0xd5, 0xa3, 0xb6, 0xd6, 0x74, 0x9d, 0x28, 0x5b, 0x4d, 0x2f, 0xdb, 0xe8, 0x10, 0xc0,
	0xc1, 0xd8, 0xa3, 0x8d, 0x66, 0x45, 0xbc, 0x92, 0x8c, 0x90, 0xdc, 0xe3, 0x33, 0x56, 0xe1, 0x9a,
	0x2c, 0x84, 0x9a, 0x3c, 0x42, 0x0f, 0x85, 0x9a, 0x04, 0x16, 0xd7, 0x62, 0x84, 0x41, 0x1f, 0xd2,
	0x70, 0x30, 0xf6, 0x54, 0x89, 0x99, 0x27, 0x19, 0x1b, 0x62, 0xe6, 0x89, 0xe6, 0xc9, 0x29, 0xdc,
	0x20, 0x3a, 0xfd, 0xca, 0x16, 0xbf, 0x29, 0xb7, 0x95, 0xad, 0x96, 0xd8, 0x6d, 0xf4, 0x2e, 0x0d,
	0x87, 0x85, 0x23, 0x0e, 0xcd, 0x27, 0xd9, 0xcb, 0x44, 0xda, 0x2c, 0x9c, 0x43, 0x25, 0xae, 0xcf,
	0x72, 0xa8, 0xcf, 0x3c, 0x9a, 0x4b, 0xe6, 0x0c, 0x91, 0x48, 0xc5, 0xc5, 0x9d, 0x7d, 0x09, 0xec,
	0xee, 0x4b, 0xe0, 0xcf, 0xbe, 0x04, 0xde, 0x1f, 0x48, 0xa9, 0xdd, 0x03, 0x29, 0xf5, 0xeb, 0x40,
	0x4a, 0xbd, 0x2c, 0x98, 0x96, 0xff, 0xba, 0x5a, 0x92, 0x0d, 0x6a, 0x77, 0xc0, 0xda, 0x3c, 0x81,
	0xe6, 0xd7, 0x5c, 0xc2, 0x4a, 0x99, 0xf0, 0xbf, 0xe9, 0xcc, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x45, 0x1a, 0xb4, 0x14, 0x91, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	ResourceDependencyMappingFromMessageKey(ctx context.Context, in *ResourceDependencyMappingFromMessageKeyRequest, opts ...grpc.CallOption) (*ResourceDependencyMappingFromMessageKeyResponse, error)
	ListResourceDependencyMapping(ctx context.Context, in *ListResourceDependencyMappingRequest, opts ...grpc.CallOption) (*ListResourceDependencyMappingResponse, error)
	WasmFunctionDependencyMapping(ctx context.Context, in *WasmFunctionDependencyMappingRequest, opts ...grpc.CallOption) (*WasmFunctionDependencyMappingResponse, error)
	ListWasmFunctionDependencyMapping(ctx context.Context, in *ListWasmFunctionDependencyMappingRequest, opts ...grpc.CallOption) (*ListWasmFunctionDependencyMappingResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/cosmos.accesscontrol_x.v1beta1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ResourceDependencyMappingFromMessageKey(ctx context.Context, in *ResourceDependencyMappingFromMessageKeyRequest, opts ...grpc.CallOption) (*ResourceDependencyMappingFromMessageKeyResponse, error) {
	out := new(ResourceDependencyMappingFromMessageKeyResponse)
	err := c.cc.Invoke(ctx, "/cosmos.accesscontrol_x.v1beta1.Query/ResourceDependencyMappingFromMessageKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListResourceDependencyMapping(ctx context.Context, in *ListResourceDependencyMappingRequest, opts ...grpc.CallOption) (*ListResourceDependencyMappingResponse, error) {
	out := new(ListResourceDependencyMappingResponse)
	err := c.cc.Invoke(ctx, "/cosmos.accesscontrol_x.v1beta1.Query/ListResourceDependencyMapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) WasmFunctionDependencyMapping(ctx context.Context, in *WasmFunctionDependencyMappingRequest, opts ...grpc.CallOption) (*WasmFunctionDependencyMappingResponse, error) {
	out := new(WasmFunctionDependencyMappingResponse)
	err := c.cc.Invoke(ctx, "/cosmos.accesscontrol_x.v1beta1.Query/WasmFunctionDependencyMapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListWasmFunctionDependencyMapping(ctx context.Context, in *ListWasmFunctionDependencyMappingRequest, opts ...grpc.CallOption) (*ListWasmFunctionDependencyMappingResponse, error) {
	out := new(ListWasmFunctionDependencyMappingResponse)
	err := c.cc.Invoke(ctx, "/cosmos.accesscontrol_x.v1beta1.Query/ListWasmFunctionDependencyMapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	ResourceDependencyMappingFromMessageKey(context.Context, *ResourceDependencyMappingFromMessageKeyRequest) (*ResourceDependencyMappingFromMessageKeyResponse, error)
	ListResourceDependencyMapping(context.Context, *ListResourceDependencyMappingRequest) (*ListResourceDependencyMappingResponse, error)
	WasmFunctionDependencyMapping(context.Context, *WasmFunctionDependencyMappingRequest) (*WasmFunctionDependencyMappingResponse, error)
	ListWasmFunctionDependencyMapping(context.Context, *ListWasmFunctionDependencyMappingRequest) (*ListWasmFunctionDependencyMappingResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) ResourceDependencyMappingFromMessageKey(ctx context.Context, req *ResourceDependencyMappingFromMessageKeyRequest) (*ResourceDependencyMappingFromMessageKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResourceDependencyMappingFromMessageKey not implemented")
}
func (*UnimplementedQueryServer) ListResourceDependencyMapping(ctx context.Context, req *ListResourceDependencyMappingRequest) (*ListResourceDependencyMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceDependencyMapping not implemented")
}
func (*UnimplementedQueryServer) WasmFunctionDependencyMapping(ctx context.Context, req *WasmFunctionDependencyMappingRequest) (*WasmFunctionDependencyMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WasmFunctionDependencyMapping not implemented")
}
func (*UnimplementedQueryServer) ListWasmFunctionDependencyMapping(ctx context.Context, req *ListWasmFunctionDependencyMappingRequest) (*ListWasmFunctionDependencyMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWasmFunctionDependencyMapping not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.accesscontrol_x.v1beta1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ResourceDependencyMappingFromMessageKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceDependencyMappingFromMessageKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ResourceDependencyMappingFromMessageKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.accesscontrol_x.v1beta1.Query/ResourceDependencyMappingFromMessageKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ResourceDependencyMappingFromMessageKey(ctx, req.(*ResourceDependencyMappingFromMessageKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListResourceDependencyMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceDependencyMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ListResourceDependencyMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.accesscontrol_x.v1beta1.Query/ListResourceDependencyMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ListResourceDependencyMapping(ctx, req.(*ListResourceDependencyMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_WasmFunctionDependencyMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WasmFunctionDependencyMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).WasmFunctionDependencyMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.accesscontrol_x.v1beta1.Query/WasmFunctionDependencyMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).WasmFunctionDependencyMapping(ctx, req.(*WasmFunctionDependencyMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListWasmFunctionDependencyMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWasmFunctionDependencyMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ListWasmFunctionDependencyMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.accesscontrol_x.v1beta1.Query/ListWasmFunctionDependencyMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ListWasmFunctionDependencyMapping(ctx, req.(*ListWasmFunctionDependencyMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmos.accesscontrol_x.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "ResourceDependencyMappingFromMessageKey",
			Handler:    _Query_ResourceDependencyMappingFromMessageKey_Handler,
		},
		{
			MethodName: "ListResourceDependencyMapping",
			Handler:    _Query_ListResourceDependencyMapping_Handler,
		},
		{
			MethodName: "WasmFunctionDependencyMapping",
			Handler:    _Query_WasmFunctionDependencyMapping_Handler,
		},
		{
			MethodName: "ListWasmFunctionDependencyMapping",
			Handler:    _Query_ListWasmFunctionDependencyMapping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos/accesscontrol_x/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ResourceDependencyMappingFromMessageKeyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceDependencyMappingFromMessageKeyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceDependencyMappingFromMessageKeyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MessageKey) > 0 {
		i -= len(m.MessageKey)
		copy(dAtA[i:], m.MessageKey)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MessageKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceDependencyMappingFromMessageKeyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceDependencyMappingFromMessageKeyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceDependencyMappingFromMessageKeyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.MessageDependencyMapping.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *WasmFunctionDependencyMappingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WasmFunctionDependencyMappingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WasmFunctionDependencyMappingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WasmFunction) > 0 {
		i -= len(m.WasmFunction)
		copy(dAtA[i:], m.WasmFunction)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.WasmFunction)))
		i--
		dAtA[i] = 0x12
	}
	if m.CodeId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.CodeId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WasmFunctionDependencyMappingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WasmFunctionDependencyMappingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WasmFunctionDependencyMappingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.WasmFunctionDependencyMapping.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ListResourceDependencyMappingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceDependencyMappingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceDependencyMappingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ListResourceDependencyMappingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourceDependencyMappingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourceDependencyMappingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MessageDependencyMappingList) > 0 {
		for iNdEx := len(m.MessageDependencyMappingList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MessageDependencyMappingList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListWasmFunctionDependencyMappingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWasmFunctionDependencyMappingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWasmFunctionDependencyMappingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ListWasmFunctionDependencyMappingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWasmFunctionDependencyMappingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWasmFunctionDependencyMappingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WasmFunctionDependencyMappingList) > 0 {
		for iNdEx := len(m.WasmFunctionDependencyMappingList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WasmFunctionDependencyMappingList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *ResourceDependencyMappingFromMessageKeyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MessageKey)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *ResourceDependencyMappingFromMessageKeyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MessageDependencyMapping.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *WasmFunctionDependencyMappingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CodeId != 0 {
		n += 1 + sovQuery(uint64(m.CodeId))
	}
	l = len(m.WasmFunction)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *WasmFunctionDependencyMappingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.WasmFunctionDependencyMapping.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *ListResourceDependencyMappingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ListResourceDependencyMappingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MessageDependencyMappingList) > 0 {
		for _, e := range m.MessageDependencyMappingList {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func (m *ListWasmFunctionDependencyMappingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ListWasmFunctionDependencyMappingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.WasmFunctionDependencyMappingList) > 0 {
		for _, e := range m.WasmFunctionDependencyMappingList {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceDependencyMappingFromMessageKeyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceDependencyMappingFromMessageKeyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceDependencyMappingFromMessageKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceDependencyMappingFromMessageKeyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceDependencyMappingFromMessageKeyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceDependencyMappingFromMessageKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageDependencyMapping", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MessageDependencyMapping.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WasmFunctionDependencyMappingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WasmFunctionDependencyMappingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WasmFunctionDependencyMappingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeId", wireType)
			}
			m.CodeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CodeId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WasmFunction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WasmFunction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WasmFunctionDependencyMappingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WasmFunctionDependencyMappingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WasmFunctionDependencyMappingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WasmFunctionDependencyMapping", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.WasmFunctionDependencyMapping.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListResourceDependencyMappingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceDependencyMappingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceDependencyMappingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListResourceDependencyMappingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourceDependencyMappingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourceDependencyMappingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageDependencyMappingList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageDependencyMappingList = append(m.MessageDependencyMappingList, accesscontrol.MessageDependencyMapping{})
			if err := m.MessageDependencyMappingList[len(m.MessageDependencyMappingList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWasmFunctionDependencyMappingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWasmFunctionDependencyMappingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWasmFunctionDependencyMappingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWasmFunctionDependencyMappingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWasmFunctionDependencyMappingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWasmFunctionDependencyMappingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WasmFunctionDependencyMappingList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WasmFunctionDependencyMappingList = append(m.WasmFunctionDependencyMappingList, accesscontrol.WasmFunctionDependencyMapping{})
			if err := m.WasmFunctionDependencyMappingList[len(m.WasmFunctionDependencyMappingList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
